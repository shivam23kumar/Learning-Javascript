Hoisting Topic:
Hoisting is something when the declared variable comes on top irrespective of its place in the code.


hoistingdone(){
    console.log(i);
    var i =10;
}
hoistingdone();

is similar to the below code,

hoistingdone(){
    var i =10;
    console.log(i);
}
hoistingdone();
==========================================================================

Function expression:
if the function you made is annonyms and don't gve any name, then the name it pick is the name of var you are assigning it.

for eg:
var function2 = function (n){
    var ans=1;
    for(var i =1; i<5; i++){
        ans = ans*1;
    }
    return ans;
};

console.log(factorial2(n));

Here the output on console will be:

f factorial2(n){
    var ans=1;
    for(var i =1; i<5; i++){
        ans = ans*1;
    }
    return ans;
}
}

==================================================================

iteration over arrays:

suppose there is an array named: arr = [2,3,4,5,6,7];
and we are creating a function called print,
function print(i){
    console.log(i)
}

Now suppose you want to print that one by one... there are many steps but here I will be talking about mainly 2 steps;
1st one:
for(var i=0;i<arr.length;i++){
    print(arr[i])
}

2nd one: where we can get the result without complex 1st step is, foreach method.
arr.forEach(print);

=======================================================================

How to travel over keys using 3 different methods?

for eg:

var Student = {
    "name":"Shivam",
    roll:11,
    marks:90
}


1st method:
var keys = Object.keys(Student);

2nd method:
var keys = Object.getOwnPropertyNames(Student);

3rd method:

for(var prop in Student){
    console.log(prop);
}

====================================================================


Pass by value and pass by reference:

obj and arrays are pass by reference where as any primitive data type is pass by value.

=====================================================================





========================================================================